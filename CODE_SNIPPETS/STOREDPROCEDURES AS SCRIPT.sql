USE [MClinical]
GO

/****** Object:  StoredProcedure [dbo].[_ANONYMIZATION_OF_PHI]    Script Date: 7/25/2019 2:41:18 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



--**********    THIS SCRIPT REQUIRES THE RANDOMDATA DATABASE. CAN BE FOUND HERE IF YOU DO NOT HAVE IT.     **********
-- CTRL CLICK TO OPEN (:
-- https://drive.google.com/open?id=1XNl0TVjTxgwotcm8LaSfdDbiiwheemVs


CREATE PROCEDURE [dbo].[_ANONYMIZATION_OF_PHI] 

AS
BEGIN

--UPDATE ON THE PATIENT TABLE
-- SET SSN TO RANDOM 9 DIGIT NUMBER
-- SET MRN TO RANDOM 7 DIGIT NUMBER
-- SET DOB TO RANDOM DATE BETWEEN 1-1-1900 TO CURRENT DATE
-- SET DOB TIME TO NULL

UPDATE Patient
SET 

ssn = FORMAT( 100000000 + ROUND( (999999999-100000000) *RAND(CONVERT(VARBINARY, NEWID())), 0), '###-##-####'),
mrnNumeric = FORMAT(( 1000000 + ROUND( (9999999-1000000) *RAND(CONVERT(VARBINARY, NEWID())), 0)),'#######'),
patientBirthDateTime = DATEADD(DAY, (ABS(CHECKSUM(NEWID())) % (DATEDIFF(DAY, '1900/01/01',GETDATE()))), 0),
patientBirthDateTimeUTC = NULL

--UPDATE ON RESULTSECTION TABLE
-- SET SECTIONVALUE TO REPLACE EVERY KNOWN OCCURANCE OF THE PATIENT FIRST NAME TO P@T!3NT N@M3

UPDATE ResultSection
SET sectionValue = REPLACE(sectionValue, Contact.givenName,'P@T!3NT N@M3')
FROM 
(
Patient LEFT JOIN mapPatientContact ON Patient.patientKey = mapPatientContact.patientKey
LEFT JOIN Contact ON mapPatientContact.contactKey = Contact.contactKey
LEFT JOIN FillerOrder ON Patient.patientKey = FillerOrder.patientKey
LEFT JOIN RequestedProcedure ON FillerOrder.fillerOrderKey = RequestedProcedure.fillerOrderKey
LEFT JOIN mapResultRequestedProcedure ON RequestedProcedure.requestedProcedureKey = mapResultRequestedProcedure.requestedProcedureKey
LEFT JOIN ResultSection ON mapResultRequestedProcedure.resultKey = ResultSection.resultKey
)

--UPDATE ON RESULTSECTION TABLE
-- SET SECTIONVALUE TO REPLACE EVERY KNOWN OCCURANCE OF THE PATIENT LAST NAME TO P@T!3NT N@M3

UPDATE ResultSection
SET sectionValue = REPLACE(sectionValue, Contact.familyName,'P@T!3NT N@M3')
FROM 
(
Patient LEFT JOIN mapPatientContact ON Patient.patientKey = mapPatientContact.patientKey
LEFT JOIN Contact ON mapPatientContact.contactKey = Contact.contactKey
LEFT JOIN FillerOrder ON Patient.patientKey = FillerOrder.patientKey
LEFT JOIN RequestedProcedure ON FillerOrder.fillerOrderKey = RequestedProcedure.fillerOrderKey
LEFT JOIN mapResultRequestedProcedure ON RequestedProcedure.requestedProcedureKey = mapResultRequestedProcedure.requestedProcedureKey
LEFT JOIN ResultSection ON mapResultRequestedProcedure.resultKey = ResultSection.resultKey
)

-- UPDATE ON THE CONTACT TABLE
-- SET GIVEN NAME TO A RANDOM FIRST NAME
-- SET MIDDLE NAME TO A RANDOM FIRST NAME
-- SET LAST NAME TO A RANDOM MIDDLE NAME

UPDATE Contact
SET

givenName = 
(
SELECT TOP(1) FIRSTNAME.FIRSTNAME
FROM RandomData.dbo.FIRSTNAME
ORDER BY NEWID(), contactKey
)
,

middleName = 
(
SELECT TOP(1) MIDDLENAME.MIDDLENAME
FROM RandomData.dbo.MIDDLENAME
ORDER BY NEWID(), contactKey
)
,

familyName = 
(
SELECT TOP(1) LASTNAME.LASTNAME
FROM RandomData.dbo.LASTNAME
ORDER BY NEWID(), contactKey
)

-- UPDATE ON THE ADDRESS TABLE
-- SET ADDRESS1 TO A RANDOM ADDRESS
-- SET ADDRESS2 TO NULL
-- SET ADDRESS3 TO NULL

UPDATE Address
SET

address1 = 
(
SELECT TOP(1) ADDRESS.ADDRESS
FROM RandomData.dbo.ADDRESS
ORDER BY NEWID(), addressKey
)
,

Address2 = null,
Address3 = null 

-- UPDATE THE EMAILADDRESS TABLE
-- SET EMAILADDRESS TO RANDOM EMAIL ADDRESS

UPDATE EmailAddress
SET

emailAddress = 
(
SELECT TOP(1) EMAILADDRESS.EMAILADDRESS
FROM RandomData.dbo.EMAILADDRESS
ORDER BY NEWID(), emailAddressKey
)

-- UPDATE PHONENUMBER TABLE
-- SET PHONE NUMBER TO A RANDOM 11 DIGIT NUMBER

UPDATE phoneNumber
SET

phoneNumber = FORMAT(10000000000 + ROUND( (99999999999-10000000000) *RAND(CONVERT(VARBINARY, NEWID())), 0), '#-###-###-####')

-- UPDATE RESULTSECTION TABLE
-- WHEN SECTION CATEGORY IS HEADER
-- SET VALUE TO REMOVE EVERYTHING BEFORE CASE NUMBER OR BEFORE NUMBER, IF NUMBER OR CASE NUMBER NOT FOUND DO NOTHING

UPDATE ResultSection
SET

sectionValue =
CASE
	WHEN
		CHARINDEX('CASE NUMBER',sectionValue) <> 0
		THEN RIGHT(sectionValue, LEN(sectionValue) - CHARINDEX('CASE NUMBER',sectionValue) +2)

	WHEN 
		CHARINDEX('NUMBER',sectionValue) <> 0
		THEN RIGHT(sectionValue, LEN(sectionValue) - CHARINDEX('NUMBER',sectionValue) +2)

	ELSE
		sectionValue 

END

WHERE sectionCategory = 'HEADER'

--UPDATE RESULTSECTION TABLE
-- WHEN SECTION CATEGORY EQUALS SIGNATURE
-- SET SECTIONVALUE TO CUSTOM SIGNATURE WITH RANDOM DATE

UPDATE ResultSection
SET

sectionValue = CONCAT('FINAL BY GESTALT DIAGNOSTIC LABORATORIES. ELECTRONICALLY SIGNED  ', CONVERT(VARCHAR,DATEADD(DAY, (ABS(CHECKSUM(NEWID())) % (DATEDIFF(DAY, '1900/01/01',GETDATE()))), 0),9))
WHERE sectionCategory = 'SIGNATURE'

-- UPDATE SECTIONVALUE TABLE
-- WHEN SECTION CATEGORY EQUALS PERFORMING LABORATORY
-- REPLACE ALL KNOWN LOCATIONS WITH CUSTOM LOCATION

UPDATE ResultSection
SET

sectionValue =
CASE
	WHEN
		CHARINDEX('INCYTE', sectionValue) <> 0
		THEN CONCAT(SUBSTRING(sectionValue, 0, CHARINDEX('INCYTE', sectionValue)), 'GESTALT DIAGNOSTIC LABORATORIES, 850 EAST SPOKANE FALLS BLVD., SUITE 124, SPOKANE, WA 99202.')

	WHEN
		CHARINDEX('SOUTHLAKE CLINIC', sectionValue) <> 0
		THEN CONCAT(SUBSTRING(sectionValue, 0, CHARINDEX('SOUTHLAKE CLINIC', sectionValue)), 'GESTALT DIAGNOSTIC LABORATORIES, 850 EAST SPOKANE FALLS BLVD., SUITE 124, SPOKANE, WA 99202.')

	WHEN
		CHARINDEX('PUYALLUP SURGICAL', sectionValue) <> 0
		THEN CONCAT(SUBSTRING(sectionValue, 0, CHARINDEX('PUYALLUP SURGICAL', sectionValue)), 'GESTALT DIAGNOSTIC LABORATORIES, 850 EAST SPOKANE FALLS BLVD., SUITE 124, SPOKANE, WA 99202.')  
		
	WHEN
		CHARINDEX('UNIPATH', sectionValue) <> 0
		THEN CONCAT(SUBSTRING(sectionValue, 0, CHARINDEX('UNIPATH', sectionValue)), 'GESTALT DIAGNOSTIC LABORATORIES, 850 EAST SPOKANE FALLS BLVD., SUITE 124, SPOKANE, WA 99202.')  

	WHEN
		CHARINDEX('PSHMC', sectionValue) <> 0
		THEN CONCAT(SUBSTRING(sectionValue, 0, CHARINDEX('PSHMC', sectionValue)), 'GESTALT DIAGNOSTIC LABORATORIES, 850 EAST SPOKANE FALLS BLVD., SUITE 124, SPOKANE, WA 99202.')  	

	WHEN
		CHARINDEX('PULLMAN REGIONAL', sectionValue) <> 0
		THEN CONCAT(SUBSTRING(sectionValue, 0, CHARINDEX('PULLMAN REGIONAL', sectionValue)), 'GESTALT DIAGNOSTIC LABORATORIES, 850 EAST SPOKANE FALLS BLVD., SUITE 124, SPOKANE, WA 99202.')  

	WHEN
		CHARINDEX('PERFORMED AT', sectionValue) <> 0
		THEN CONCAT(SUBSTRING(sectionValue, 0, CHARINDEX('PERFORMED AT', sectionValue)), 'GESTALT DIAGNOSTIC LABORATORIES, 850 EAST SPOKANE FALLS BLVD., SUITE 124, SPOKANE, WA 99202.') 
	
	ELSE 
		'PROFESSIONAL INTERPREATION WAS PERFORMED BY GESTALT DIAGNOSTIC LABORATORIES, 850 EAST SPOKANE FALLS BLVD., SUITE 124, SPOKANE, WA 99202.'		
END
	
WHERE sectionCategory = 'PERFORMING LABORATORY' 
OR sectionCategory = 'PERFORMING LABORATORY.'

-- UPDATE RESULTSECTION TABLE
-- SET SECTIONVALUE TO REPLACE EVERY KNOW OCCURANCE OF INCYTE DIAGNOSTICS WITH CUSTOM LOCATION

UPDATE ResultSection
SET

sectionValue = REPLACE(sectionValue,'Incyte Diagnostics', 'GESTALT DIAGNOSTIC LABORATORIES')

-- UPDATE RESULTSECTION TABLE
-- SET SECTIONVALUE TO REPLACE EVERY KNOW OCCURANCE OF INCYTE WITH CUSTOM WORD

UPDATE ResultSection
SET

sectionValue = REPLACE(sectionValue,'Incyte', 'GESTALT')

-- UPDATE RESULTSECTION TABLE
-- SET SECTIONVALUE TO REPLACE EVERY KNOWN OCCURANCE OF THE SPECIFIED ADDRESS WITH CUSTOM ADDRESS

UPDATE ResultSection
SET

sectionValue = REPLACE(sectionValue,' 1280 116th Ave NE, Bellevue, WA', '850 EAST SPOKANE FALLS BLVD., SUITE 124, SPOKANE, WA 99202.')

-- UPDATE OLFDATAVARCHARVALUES TABLE
-- SET RESULTVALUE TO REMOVE THE NAME BETWEEN PATIENT AND CASE NUMBER

UPDATE OLFDataVarcharValues
SET

result_value = 
CASE
	WHEN CHARINDEX('PATIENT',result_value) <> 0 AND CHARINDEX('CASE NUMBER',result_value) <> 0
	THEN CONCAT(LEFT(result_value,CHARINDEX('PATIENT',result_value) +7),RIGHT(result_value, LEN(result_value) - CHARINDEX('CASE NUMBER',result_value) +1))

	ELSE
		result_value
END

-- UPDATE OLFDATAVARCHARVALUES TABLE
-- SET RESULTVALUE TO REPLACE ALL OCCURANCES OF THE ADDRESS WITH CUSTOM ADDRESS

UPDATE OLFDataVarcharValues
SET

result_value = REPLACE(result_value,'1280 116th Ave NE, Bellevue, WA', '850 EAST SPOKANE FALLS BLVD., SUITE 124, SPOKANE, WA 99202.')

-- UPDATE OLFDATAVARCHARVALUES TABLE
-- SET RESULTVALUE TO REPLACE ALL OCCURANCES OF THE ADDRESS WITH CUSTOM ADDRESS

UPDATE OLFDataVarcharValues
SET

result_value = REPLACE(result_value,'13103 E. Mansfield Ave., Spokane Valley, WA 99216', '850 EAST SPOKANE FALLS BLVD., SUITE 124, SPOKANE, WA 99202.')

-- UPDATE OLFDATAVARCHARVALUES TABLE
-- REPLACE ALL KNOWN LOCATIONS WITH CUSTOM LOCATION

UPDATE OLFDataVarcharValues
SET

result_value =
CASE
	WHEN
		CHARINDEX('INCYTE DIAGNOSTICS', result_value) <> 0
		THEN REPLACE(result_value, 'INCYTE DIAGNOSTICS', 'GESTALT DIAGNOSTIC LABORATORIES')

	WHEN
		CHARINDEX('INCYTE', result_value) <> 0
		THEN REPLACE(result_value, 'INCYTE', 'GESTALT DIAGNOSTIC LABORATORIES')

	WHEN
		CHARINDEX('SOUTHLAKE CLINIC', result_value) <> 0
		THEN REPLACE(result_value, 'SOUTHLAKE CLINIC', 'GESTALT DIAGNOSTIC LABORATORIES')

	WHEN
		CHARINDEX('PUYALLUP SURGICAL', result_value) <> 0
		THEN REPLACE(result_value, 'PUYALLUP SURGICAL', 'GESTALT DIAGNOSTIC LABORATORIES')  
		
	WHEN
		CHARINDEX('UNIPATH', result_value) <> 0
		THEN REPLACE(result_value, 'UNIPATH', 'GESTALT DIAGNOSTIC LABORATORIES')  

	WHEN
		CHARINDEX('PSHMC', result_value) <> 0
		THEN CONCAT(result_value, 'PSHMC', 'GESTALT DIAGNOSTIC LABORATORIES')  	

	WHEN
		CHARINDEX('PULLMAN REGIONAL', result_value) <> 0
		THEN REPLACE(result_value, 'PULLMAN REGIONAL', 'GESTALT DIAGNOSTIC LABORATORIES') 

	ELSE
		result_value
END



END
GO

